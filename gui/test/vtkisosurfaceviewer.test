# Commands covered:
# Rappture::VtkIsosurfaceViewer
#
# This file contains a collection of tests for one of the Rappture Tcl
# commands.  Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.
#
# ======================================================================
# AUTHORS:
#   Derrick Kearney, Purdue University
#   Leif Delgass, Purdue University
# Copyright (c) 2004-2016  HUBzero Foundation, LLC
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.


if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    package require Rappture
    package require RapptureGUI
    namespace import -force ::tcltest::*
}

#----------------------------------------------------------
#----------------------------------------------------------
# constructor
#
# Rappture::VtkIsosurfaceViewer <name> <servers>
#----------------------------------------------------------
test vtkisosurfaceviewer.constructor.0 {
    constructor, 0 args, auto named
} -setup {
} -body  {
    Rappture::VtkIsosurfaceViewer .#auto
} -cleanup {
} -match glob \
-result {.vtkIsosurfaceViewer*} \
-errorOutput {connecting to *:2010...
Render server is VtkVis * (build *)
}

test vtkisosurfaceviewer.constructor.1 {
    constructor, 0 args, explicit name
} -setup {
} -body  {
    Rappture::VtkIsosurfaceViewer .foo
} -cleanup {
} -match glob \
-result {.foo} \
-errorOutput {connecting to *:2010...
Render server is VtkVis * (build *)
}

test vtkisosurfaceviewer.constructor.2 {
    value command, auto name, -plotbackground option
} -setup {
} -body  {
    Rappture::VtkIsosurfaceViewer .#auto -plotbackground red
} -cleanup {
} -match glob \
-result {.vtkIsosurfaceViewer*} \
-errorOutput {connecting to *:2010...
Render server is VtkVis * (build *)
}

test vtkisosurfaceviewer.constructor.3 {
    value command, bad option
} -setup {
} -body  {
    Rappture::VtkIsosurfaceViewer .#auto -nonexistent foo
} -cleanup {
} -returnCodes {
    error
} -result {unknown option "-nonexistent"}

::tcltest::cleanupTests
return
