# Commands covered:
#   Rappture::GeoMapLayer
#
# This file contains a collection of tests for one of the Rappture Tcl
# commands.  Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.
#
# ======================================================================
# AUTHOR:  Derrick Kearney, Purdue University
# Copyright (c) 2004-2015  HUBzero Foundation, LLC
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.


if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    package require RapptureGUI
    namespace import -force ::tcltest::*
}
catch {unset lib}

proc check {var size} {
    set l [llength $var]
    if {$l != $size} {
        return "length mismatch: should have been $size, was $l"
    }
    for {set i 0} {$i < $size} {set i [expr $i+1]} {
        set j [lindex $var $i]
        if {$j != "item $i"} {
            return "element $i should have been \"item $i\", was \"$j\""
        }
    }
    return ok
}

set provider [Rappture::GeoMapDataProviderXYZ #auto {http://myurl.com/}]

#----------------------------------------------------------
#----------------------------------------------------------
# constructor command
# Rappture::GeoMapLayer <name> <provider> \
#   ?-label <label>? \
#   ?-description <desc>? \
#   ?-attribution <attrib>? \
#   ?-visibility <visibility>? \
#   ?-opacity <opacity>?
#----------------------------------------------------------
test geomaplayer-1.1 {Rappture::GeoMapLayer, 0 arguments} {
    list [catch {Rappture::GeoMapLayer} msg] $msg
} {0 {}}

test geomaplayer-1.2 {Rappture::GeoMapLayer, 1 arguments} {
    list [catch {Rappture::GeoMapLayer name $provider} msg] $msg
} {0 name}


test geomaplayer-11.0 {Rappture::GeoMapLayer, export (default format)} {
    set l [Rappture::GeoMapLayer #auto $provider]
    set t [$l export]
    list [catch {lindex [$t dump 0] 3} msg] $msg
} {0 {type image driver xyz cache true attribution {} xyz.url http://myurl.com/ label {} description {} visible true opacity 1.0}}

test geomaplayer-11.1 {Rappture::GeoMapLayer, export bad format} {
    set l [Rappture::GeoMapLayer #auto $provider]
    list [catch {$l export -format blahh} msg] $msg
} {1 {bad format "blahh": should be one of blt_tree}}

test geomaplayer-11.2 {Rappture::GeoMapLayer, export -format blt_tree} {
    set l [Rappture::GeoMapLayer #auto $provider]
    set t [$l export -format blt_tree]
    list [catch {lindex [$t dump 0] 3} msg] $msg
} {0 {type image driver xyz cache true attribution {} xyz.url http://myurl.com/ label {} description {} visible true opacity 1.0}}



# TODO:

::tcltest::cleanupTests
return

