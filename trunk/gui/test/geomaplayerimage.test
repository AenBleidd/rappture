# Commands covered:
#   Rappture::GeoMapLayerImage
#
# This file contains a collection of tests for one of the Rappture Tcl
# commands.  Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.
#
# ======================================================================
# AUTHOR:  Derrick Kearney, Purdue University
# Copyright (c) 2004-2015  HUBzero Foundation, LLC
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.


if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    package require RapptureGUI
    namespace import -force ::tcltest::*
}
catch {unset lib}

proc check {var size} {
    set l [llength $var]
    if {$l != $size} {
        return "length mismatch: should have been $size, was $l"
    }
    for {set i 0} {$i < $size} {set i [expr $i+1]} {
        set j [lindex $var $i]
        if {$j != "item $i"} {
            return "element $i should have been \"item $i\", was \"$j\""
        }
    }
    return ok
}

set provider [Rappture::GeoMapDataProviderXYZ #auto {http://myurl.com/}]

#----------------------------------------------------------
#----------------------------------------------------------
# constructor command
# Rappture::GeoMapLayerImage <name> <provider> \
#   ?-label <text>? \
#   ?-description <text>? \
#   ?-visibility <bool>? \
#   ?-opacity <float>? \
#   ?-coverage <bool>?
#----------------------------------------------------------
test geomaplayerimage-1.1 {Rappture::GeoMapLayerImage, 0 arguments} {
    list [catch {Rappture::GeoMapLayerImage} msg] $msg
} {0 {}}

test geomaplayerimage-1.2 {Rappture::GeoMapLayerImage, 2 arguments} {
    list [catch {Rappture::GeoMapLayerImage name $provider \
                    -coverage true} msg] $msg
} {0 name}

test geomaplayerimage-4.0 {Rappture::GeoMapLayerImage, set coverage} {
    set l [Rappture::GeoMapLayerImage #auto $provider]
    list [catch {$l configure -coverage true} msg] $msg
} {0 {}}

test geomaplayerimage-4.1 {Rappture::GeoMapLayerImage, get coverage} {
    set l [Rappture::GeoMapLayerImage #auto $provider]
    $l configure -coverage true
    list [catch {$l cget -coverage} msg] $msg
} {0 true}

test geomaplayerimage-5.0 {Rappture::GeoMapLayerImage, export -format blt_tree} {
    set l [Rappture::GeoMapLayerImage #auto $provider]
    set t [$l export -format blt_tree]
    list [catch {lindex [$t dump 0] 3} msg] $msg
} {0 {type image driver xyz cache true attribution {} xyz.url http://myurl.com/ label {} description {} visible true opacity 1.0 coverage false}}


# TODO:

::tcltest::cleanupTests
return

