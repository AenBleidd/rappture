# Commands covered: Rappture::split
#
# This file contains a collection of tests for one of the Rappture Tcl
# commands.  Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.
#
# ======================================================================
# AUTHOR:  Michael McLennan, Purdue University
# Copyright (c) 2004-2009  Purdue Research Foundation
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.


if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    package require Rappture
    namespace import -force ::tcltest::*
}

#----------------------------------------------------------
# Check command line switches and proper args
#----------------------------------------------------------
test split-1.1 {requires at least one arg} {
    list [catch {Rappture::split} msg] $msg
} {1 {wrong # args: should be "Rappture::split ?-open chars? ?-close chars? ?-separators chars? ?--? string}}

test split-1.2 {has certain options} {
    list [catch {Rappture::split -foo string} msg] $msg
} {1 {bad option "-foo": should be -open, -close, -separators, --}}

test split-1.3 {options require values} {
    list [catch {Rappture::split -separators string} msg] $msg
} {1 {wrong # args: should be "Rappture::split ?-open chars? ?-close chars? ?-separators chars? ?--? string}}

test split-1.4 {open/close quote lists must match} {
    list [catch {Rappture::split -open 1 -close 12 string} msg] $msg
} {1 {must have same number of quote characters for -open and -close}}

test split-1.5 {can't have multiple strings} {
    list [catch {Rappture::split -separators ab string1 string2} msg] $msg
} {1 {wrong # args: should be "Rappture::split ?-open chars? ?-close chars? ?-separators chars? ?--? string}}

test split-1.6 {use -- when string starts with -} {
    list [catch {Rappture::split -- "-foo -bar"} msg] $msg
} {0 {-foo -bar}}

#----------------------------------------------------------
# Check the rules for splitting
#----------------------------------------------------------
test split-2.1 {multiple separator chars are lumped together} {
    Rappture::split -separators ", \t\n" "one,  two ,  three  "
} {one two three}

test split-2.2 {leading separators are ignored} {
    Rappture::split -separators ", \t\n" ",, one,  two,"
} {one two}

test split-2.3 {quote characters keep things together} {
    Rappture::split -open \" -close \" {"foo bar" "baz"  " qux "}
} {{foo bar} baz { qux }}

test split-2.4 {embedded quotes are ignored} {
    Rappture::split -open \" -close \" {foo"bar "baz\""  \"qux}
} {foo\"bar {baz\"} {\"qux}}

test split-2.5 {trailing quote doesn't dump core} {
    Rappture::split -open \" -close \" {foo"bar "baz"  \"qux "}
} {foo\"bar baz {\"qux} {}}

test split-2.6 {close quote corresponds to open quote} {
    Rappture::split -open \"< -close \"> { <foo bar> <a b " c> "a<>b" }
} {{foo bar} {a b " c} a<>b}

test split-2.7 {close quote can be escaped} {
    Rappture::split -open \"< -close \"> { <<foo bar\>> <a  b> }
} {{<foo bar\>} {a  b}}

test split-2.8 {can override standard separators} {
    Rappture::split -separators : { 1eV : 2 eV : 0.1}
} {{ 1eV } { 2 eV } { 0.1}}

test split-2.9 {no quotes by default} {
    Rappture::split -separators : { "1eV : 2 eV" : 0.1}
} {{ "1eV } { 2 eV" } { 0.1}}

::tcltest::cleanupTests
return
