
SHELL = /bin/sh

bindir          = @bindir@
datadir         = @datadir@
datarootdir     = @datarootdir@
exec_prefix     = @exec_prefix@
includedir      = @includedir@
libdir          = @libdir@
mandir          = @mandir@
prefix          = @prefix@
srcdir          = @srcdir@

VPATH           = $(srcdir)

INSTALL         = @INSTALL@
MKDIR_P         = @MKDIR_P@

#Why are these files installed owner writable?
INSTALL_PROGRAM = ${INSTALL} -m 0555
INSTALL_DATA    = ${INSTALL} -m 0444
INSTALL_SCRIPT  = ${INSTALL} -m 0444
RM              = rm -f

AUXSRC          = config.h define.h global.h

CG_DIR          = @CG_DIR@
CG_INC_SPEC     = -I$(CG_DIR)/include
CG_LIB_SPEC     = -L$(CG_DIR)/lib -lCg -lCgGL
DX_INC_SPEC     = @DX_INC_SPEC@
DX_LIB_SPEC     = @DX_LIB_SPEC@
FF_LIB_SPEC     = @LIBS@
FF_INC_SPEC     = @FF_INC_SPEC@

GL_INC_SPEC     = -I/usr/include/GL
GL_LIB_SPEC     = -lGL -lglut -lGLEW -lGLU
IMG_DIR		= ./imgLoaders
IMG_INC_SPEC	= -I$(srcdir)/$(IMG_DIR)
IMG_LIB		= $(IMG_DIR)/ImageLoaders.a
IMG_LIB_SPEC	= $(IMG_LIB)
MAT_DIR		= ./newmat11
MAT_INC_SPEC	= -I$(srcdir)/$(MAT_DIR)
MAT_LIB		= $(MAT_DIR)/newmat11.a
MAT_LIB_SPEC	= $(MAT_LIB)
VRMATH_DIR	= ./vrmath
VRMATH_INC_SPEC	= -I$(srcdir)/$(VRMATH_DIR)/include
VRMATH_LIB	= $(VRMATH_DIR)/vrmath.a
VRMATH_LIB_SPEC	= $(VRMATH_LIB)
VRUTIL_DIR	= ./vrutil
VRUTIL_INC_SPEC	= -I$(srcdir)/$(VRUTIL_DIR)/include
VRUTIL_LIB	= $(VRUTIL_DIR)/vrutil.a
VRUTIL_LIB_SPEC	= $(VRUTIL_LIB)
VR3D_DIR	= ./vr3d
VR3D_INC_SPEC	= -I$(srcdir)/$(VR3D_DIR)/include
VR3D_LIB	= $(VR3D_DIR)/vr3d.a
VR3D_LIB_SPEC	= $(VR3D_LIB)
R2_DIR		= ./R2
R2_INC_SPEC	= -I$(srcdir)/$(R2_DIR)/include
R2_LIB		= $(R2_DIR)/src/R2.a
R2_LIB_SPEC	= $(R2_LIB)

EXTRA_LIBS      = -lm -lpthread
RP_DIR          =  @RP_DIR@
RP_INC_SPEC     = -I$(RP_DIR)/include -I$(RP_DIR)/include/rappture2
RP_LIB_SPEC     = -L$(RP_DIR)/lib -lrappture2 -lrappture -lexpat -lz

TCL_LIB_SPEC    = @TCL_LIB_SPEC@
TCL_INC_SPEC    = @TCL_INC_SPEC@

LD_RUN_PATH     = $(libdir):@LD_RPATH@

LIBS		= \
		$(RP_LIB_SPEC) \
		$(DX_LIB_SPEC) \
		$(IMG_LIB_SPEC) \
		$(R2_LIB_SPEC) \
		$(MAT_LIB_SPEC) \
		$(VRMATH_LIB_SPEC) \
		$(VRUTIL_LIB_SPEC) \
		$(VR3D_LIB_SPEC) \
		$(TCL_LIB_SPEC) \
		$(CG_LIB_SPEC) \
		$(GL_LIB_SPEC) \
		$(FF_LIB_SPEC) \
		$(EXTRA_LIBS) \
		-Wl,-rpath,$(LD_RUN_PATH)

INCLUDES	= \
		-I. \
		-I$(srcdir) \
		$(R2_INC_SPEC) \
		$(IMG_INC_SPEC) \
		$(MAT_INC_SPEC) \
		$(VRMATH_INC_SPEC) \
		$(VRUTIL_INC_SPEC) \
		$(VR3D_INC_SPEC) \
		$(TCL_INC_SPEC) \
		$(FF_INC_SPEC) \
		$(CG_INC_SPEC) \
		$(GL_INC_SPEC) \
		$(RP_INC_SPEC)

CC              = @CC@
CXX             = @CXX@
CFLAGS          = @CFLAGS@
EXTRA_CFLAGS    = -Wall
DEFINES         = 
CXX_SWITCHES    = $(CFLAGS) $(EXTRA_CFLAGS) $(DEFINES) $(INCLUDES)

OBJS		= \
		Axis.o \
		BucketSort.o \
		Chain.o \
		CmdProc.o \
		Color.o \
		Command.o \
		ContourLineFilter.o \
		ConvexPolygon.o \
		DataLoader.o \
		Event.o \
		FlowCmd.o \
		GradientFilter.o \
		Grid.o \
		HeightMap.o \
		Mat4x4.o \
		Nv.o \
		NvCamera.o \
		NvColorTableRenderer.o \
		NvColorTableShader.o \
		NvDefaultTFData.o \
		NvEventLog.o \
		NvFlowVisRenderer.o \
		NvLIC.o \
		NvLoadFile.o \
		NvParticleAdvectionShader.o \
		NvParticleRenderer.o \
		NvRegularVolumeShader.o \
		NvShader.o \
		NvStdVertexShader.o \
		NvVectorField.o \
		NvVolumeShader.o \
		NvZincBlendeReconstructor.o \
		NvZincBlendeVolumeShader.o \
		ParticleEmitter.o \
		ParticleSystem.o \
		ParticleSystemFactory.o \
		PCASplit.o \
		PerfQuery.o \
		Plane.o \
		PlaneRenderer.o \
		PointSet.o \
		PointSetRenderer.o \
		PointShader.o \
		Renderable.o \
		RenderContext.o \
		RenderVertexArray.o \
		RpAVTranslate.o \
		RpDX.o \
		ScreenSnapper.o \
		Sphere.o \
		Switch.o \
		Texture1D.o \
		Texture2D.o \
		Texture3D.o \
		Trace.o \
		TransferFunction.o \
		Unirect.o \
		Util.o \
		VelocityArrowsSlice.o \
		Volume.o \
		VolumeInterpolator.o \
		VolumeRenderer.o \
		ZincBlendeVolume.o \
		dxReader.o \
		dxReader2.o \
		dxReaderCommon.o \
		nanovis.o

resources	= \
		$(srcdir)/resources/Font.bmp \
		$(srcdir)/resources/arrows_flip2.png \
		$(srcdir)/resources/arrows_red_bg.bmp \
		$(srcdir)/resources/arrows.bmp \
		$(srcdir)/resources/particle2.bmp \
		$(srcdir)/resources/verdana.fnt \
		$(srcdir)/resources/verdana_bold.fnt

shaders		= \
		$(srcdir)/shaders/common.cg \
		$(srcdir)/shaders/copy_texcoord.cg \
		$(srcdir)/shaders/heightcolor.cg \
		$(srcdir)/shaders/one_plane.cg \
		$(srcdir)/shaders/one_volume.cg \
                $(srcdir)/shaders/particle_common.cg \
		$(srcdir)/shaders/passthru.cg \
		$(srcdir)/shaders/pointsvp.cg \
		$(srcdir)/shaders/queryvelocity.cg \
		$(srcdir)/shaders/render_vel.cg \
		$(srcdir)/shaders/update_pos.cg \
		$(srcdir)/shaders/update_pos_vel.cg \
		$(srcdir)/shaders/update_vel.cg \
		$(srcdir)/shaders/vertex_std.cg \
		$(srcdir)/shaders/volqd_volume.cg \
                $(srcdir)/shaders/velocityslicevp.cg \
                $(srcdir)/shaders/velocityslicefp.cg \
		$(srcdir)/shaders/zincblende_volume.cg \
		$(srcdir)/shaders/distance.cg \
		$(srcdir)/shaders/distancesort.cg \
		$(srcdir)/shaders/mergesort.cg \
		$(srcdir)/shaders/moveparticles.cg \
		$(srcdir)/shaders/particlefp.cg \
		$(srcdir)/shaders/particlevp.cg \
		$(srcdir)/shaders/passthrough.cg \
		$(srcdir)/shaders/renderparticle.cg \
		$(srcdir)/shaders/velocity.cg

.PHONY: all install install-resources install-shaders install-nanovis clean distclean newmat11 R2 imgloaders vrmath vrutil vr3d transfer-function 

all: newmat11 R2 imgloaders vrmath vrutil vr3d transfer-function nanovis 

install: install-nanovis install-resources install-shaders

newmat11:		$(MAT_LIB)
R2:			$(R2_LIB)
vrmath:			$(VRMATH_LIB)
vrutil:			$(VRUTIL_LIB)
vr3d:			$(VR3D_LIB)
imgloaders:		$(IMG_LIB)

$(MAT_LIB):
	$(MAKE) -C $(MAT_DIR) all

$(VRMATH_LIB):
	$(MAKE) -C $(VRMATH_DIR) all

$(VRUTIL_LIB):
	$(MAKE) -C $(VRUTIL_DIR) all

$(VR3D_LIB):
	$(MAKE) -C $(VR3D_DIR) all

$(R2_LIB): 
	$(MAKE) -C $(R2_DIR)/src all

$(IMG_LIB): 
	$(MAKE) -C $(IMG_DIR) all

nanovis: $(MAT_LIB) $(R2_LIB) $(IMG_LIB) $(VRMATH_LIB) $(VRUTIL_LIB) $(VR3D_LIB) $(OBJS)
	$(CXX) $(CXX_SWITCHES) -o $@ $^ $(LIBS)

.cpp.o:
	$(CXX) $(CXX_SWITCHES) -o $@ -c $<

dxReader2.o: $(srcdir)/dxReader2.cpp
	$(CXX) -c $(CXX_SWITCHES) $(DX_INC_SPEC) $<
RpDX.o: $(srcdir)/RpDX.cpp
	$(CXX) -c $(CXX_SWITCHES) $(DX_INC_SPEC) $<
RpAVTranslate.o: $(srcdir)/RpAVTranslate.cpp
	$(CXX) -c $(CXX_SWITCHES) $(FF_INC_SPEC) $<

client: Socket.o ClientSocket.o RenderClient.o Event.o
	$(CXX) $(CXX_SWITCHES) -o $@ $^ $(LIBS)

Socket.o: socket/Socket.cpp socket/Socket.h
	$(CXX) $(CXX_SWITCHES) -o $@ -c $<
ClientSocket.o: socket/ClientSocket.cpp socket/ClientSocket.h
	$(CXX) $(CXX_SWITCHES) -o $@ -c $<
RenderClient.o: socket/RenderClient.cpp socket/RenderClient.h
	$(CXX) $(CXX_SWITCHES) -o $@ -c $<

install-resources:
	$(MKDIR_P) $(libdir)/resources
	@for i in $(resources) ; do \
	    echo "installing $$i..." ; \
	    $(INSTALL_DATA) $$i $(libdir)/resources ; \
	done

install-shaders:
	$(MKDIR_P) $(libdir)/shaders
	@for i in $(shaders) ; do \
	    echo "installing $$i..." ; \
	    $(INSTALL_DATA) $$i $(libdir)/shaders ; \
	done

install-nanovis: nanovis
	$(INSTALL_PROGRAM) nanovis $(bindir)

clean:
	$(MAKE) -C $(MAT_DIR) clean
	$(MAKE) -C $(VRMATH_DIR) clean
	$(MAKE) -C $(VRUTIL_DIR) clean
	$(MAKE) -C $(VR3D_DIR) clean
	$(MAKE) -C $(R2_DIR)/src clean
	$(MAKE) -C $(IMG_DIR) clean
	$(RM) nanovis client $(OBJS)

distclean: clean
	$(MAKE) -C $(MAT_DIR) distclean
	$(MAKE) -C $(VRMATH_DIR) distclean
	$(MAKE) -C $(VRUTIL_DIR) distclean
	$(MAKE) -C $(VR3D_DIR) distclean
	$(MAKE) -C $(R2_DIR)/src distclean
	$(MAKE) -C $(IMG_DIR) distclean
	$(RM) Makefile nvconf.h *~

Axis.o: Axis.cpp Axis.h Chain.h
BucketSort.o: BucketSort.cpp BucketSort.h Vector3.h Vector4.h Mat4x4.h PCASplit.h
Chain.o: Chain.cpp Chain.h
CmdProc.o: CmdProc.cpp CmdProc.h
Color.o: Color.cpp Color.h
Command.o: Command.cpp Command.h
ContourLineFilter.o: ContourLineFilter.cpp ContourLineFilter.h
ConvexPolygon.o: ConvexPolygon.cpp ConvexPolygon.h
DataLoader.o: DataLoader.cpp 
Event.o: Event.cpp Event.h
FlowCmd.o: FlowCmd.cpp FlowCmd.h Switch.h Trace.h TransferFunction.h nanovis.h Command.h CmdProc.h Nv.h NvLIC.h Unirect.h
GradientFilter.o: GradientFilter.cpp GradientFilter.h
Grid.o: Grid.cpp Grid.h
HeightMap.o: HeightMap.cpp HeightMap.h
Mat4x4.o: Mat4x4.cpp Mat4x4.h
Nv.o: Nv.cpp Nv.h NvShader.h NvParticleRenderer.h NvColorTableRenderer.h NvEventLog.h VolumeRenderer.h PointSetRenderer.h
NvCamera.o: NvCamera.cpp NvCamera.h
NvColorTableRenderer.o: NvColorTableRenderer.cpp NvColorTableRenderer.h
NvColorTableShader.o: NvColorTableShader.cpp NvColorTableShader.h
NvDefaultTFData.o: NvDefaultTFData.cpp
NvEventLog.o: NvEventLog.cpp NvEventLog.h
NvFlowVisRenderer.o: NvFlowVisRenderer.cpp NvFlowVisRenderer.h
NvLIC.o: NvLIC.cpp NvLIC.h
NvLoadFile.o: NvLoadFile.cpp NvLoadFile.h
NvParticleAdvectionShader.o: NvParticleAdvectionShader.cpp NvParticleAdvectionShader.h
NvParticleRenderer.o: NvParticleRenderer.cpp NvParticleRenderer.h
NvRegularVolumeShader.o: NvRegularVolumeShader.cpp NvRegularVolumeShader.h
NvShader.o: NvShader.cpp NvShader.h
NvStdVertexShader.o: NvStdVertexShader.cpp NvStdVertexShader.h
NvVectorField.o: NvVectorField.cpp NvVectorField.h
NvVolumeShader.o: NvVolumeShader.cpp NvVolumeShader.h
NvZincBlendeReconstructor.o: NvZincBlendeReconstructor.cpp NvZincBlendeReconstructor.h ZincBlendeVolume.h Volume.h Vector3.h
NvZincBlendeVolumeShader.o: NvZincBlendeVolumeShader.cpp NvZincBlendeVolumeShader.h
ParticleEmitter.o: ParticleEmitter.cpp ParticleEmitter.h
ParticleSystem.o: ParticleSystem.cpp ParticleSystem.h
ParticleSystemFactory.o: ParticleSystemFactory.cpp ParticleSystemFactory.h
PCASplit.o: PCASplit.cpp PCASplit.h
PerfQuery.o: PerfQuery.cpp PerfQuery.h
Plane.o: Plane.cpp Plane.h
PlaneRenderer.o: PlaneRenderer.cpp PlaneRenderer.h
PointSet.o: PointSet.cpp PointSet.h
PointSetRenderer.o: PointSetRenderer.cpp PointSetRenderer.h
PointShader.o: PointShader.cpp PointShader.h
Renderable.o: Renderable.cpp Renderable.h
RenderContext.o: RenderContext.cpp RenderContext.h
RenderVertexArray.o: RenderVertexArray.cpp RenderVertexArray.h
RpAVTranslate.o: RpAVTranslate.cpp RpAVTranslate.h nvconf.h
RpDX.o: RpDX.cpp RpDX.h Trace.h
ScreenSnapper.o: ScreenSnapper.cpp ScreenSnapper.h define.h
Sphere.o: Sphere.cpp Sphere.h
Switch.o: Switch.cpp Switch.h
Texture1D.o: Texture1D.cpp Texture1D.h
Texture2D.o: Texture2D.cpp Texture2D.h $(AUXSRC)
Texture3D.o: Texture3D.cpp Texture3D.h $(AUXSRC)
Trace.o: Trace.cpp Trace.h
TransferFunction.o: TransferFunction.cpp
Unirect.o: Unirect.cpp Unirect.h Trace.h
Util.o: Util.cpp Util.h
VelocityArrowsSlice.o: VelocityArrowsSlice.cpp VelocityArrowsSlice.h
Volume.o: Volume.cpp Volume.h $(AUXSRC)
VolumeInterpolator.o: VolumeInterpolator.cpp VolumeInterpolator.h
VolumeRenderer.o: VolumeRenderer.cpp VolumeRenderer.h
ZincBlendeVolume.o: ZincBlendeVolume.cpp ZincBlendeVolume.h $(AUXSRC)
dxReader.o: dxReader.cpp dxReaderCommon.h Nv.h nanovis.h Unirect.h ZincBlendeVolume.h NvZincBlendeReconstructor.h
dxReader2.o: dxReader2.cpp dxReaderCommon.h RpDX.h Nv.h nanovis.h
dxReaderCommon.o: dxReaderCommon.cpp dxReaderCommon.h GradientFilter.h Vector3.h
nanovis.o: nanovis.cpp nanovis.h $(AUXSRC)
