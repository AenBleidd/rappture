
#
# FIXME: I can see at least 3 possible candidates for separate libraries.
#	  R2, mat, and Image.  (First 2 are done.)
#
SHELL = /bin/sh

#.SUFFIX:
#SUFFIX: .c .o .cpp

.PHONY: all install clean distclean

prefix          = @prefix@
exec_prefix     = @exec_prefix@
bindir          = @bindir@
libdir          = @libdir@
srcdir		= @srcdir@
includedir      = @includedir@
mandir          = @mandir@

INSTALL		= @INSTALL@
INSTALL_PROGRAM	= ${INSTALL} -m 755
INSTALL_DATA	= ${INSTALL} -m 644
INSTALL_SCRIPT	= ${INSTALL} -m 644

CC = @CC@

AUXSRC = config.h define.h global.h

DX_DIR		= /usr/lib/dx
DX_INC_SPEC	= -I$(DX_DIR)/include
DX_LIB_SPEC	= -L$(DX_DIR)/lib_linux -lDXcallm -lm
GL_INC_SPEC	= -I/usr/include/GL
GL_LIB_SPEC	= -lGL -lglut -lglui -lGLEW -lCg -lCgGL -lpthread
IMG_DIR		= ./imgLoaders
IMG_INC_SPEC	= -I$(srcdir)/$(IMG_DIR)
IMG_LIB		= $(IMG_DIR)/libImageLoaders.a
IMG_LIB_SPEC	= $(IMG_LIB)
MAT_DIR		= ./newmat11
MAT_INC_SPEC	= -I$(srcdir)/$(MAT_DIR)
MAT_LIB		= $(MAT_DIR)/libnewmat11.a
MAT_LIB_SPEC	= $(MAT_LIB)
R2_DIR		= ./R2
R2_INC_SPEC	= -I$(srcdir)/$(R2_DIR)/include
R2_LIB		= $(R2_DIR)/src/libR2.a
R2_LIB_SPEC	= $(R2_LIB)
RP_DIR		=  @RP_DIR@
RP_INC_SPEC	= -I$(RP_DIR)/include -I$(RP_DIR)/include/rappture2
RP_LIB_SPEC	= -L$(RP_DIR)/lib -lrappture2 -lb64 -lz

LIBS = \
	$(RP_LIB_SPEC) \
	-ltcl8.4 \
	$(GL_LIB_SPEC) \
	$(DX_LIB_SPEC) \
	$(IMG_LIB_SPEC) \
	$(R2_LIB_SPEC) \
	$(MAT_LIB_SPEC)

INCLUDES = \
	-I. \
	$(RP_INC_SPEC) \
	$(GL_INC_SPEC) \
	$(R2_INC_SPEC) \
	$(IMG_INC_SPEC) \
	$(MAT_INC_SPEC)

CFLAGS = @CFLAGS@
EXTRA_CFLAGS = -Wall 
DEFINES = @DEFINES@
CC_SWITCHES = $(CFLAGS) $(EXTRA_CFLAGS) $(INCLUDES)

OBJS  = \
	BucketSort.o \
	NvCamera.o \
	CmdProc.o \
	Color.o \
	ColorGradient.o \
	ColorGradientGLUTWindow.o \
	ColorPaletteWindow.o\
	Command.o \
	ContourLineFilter.o \
	ControlPoint.o \
	ConvexPolygon.o \
	Event.o \
	GradientFilter.o \
	Grid.o \
	HeightMap.o \
	MainWindow.o \
	Mat4x4.o \
	Nv.o \
	NvColorTableRenderer.o \
	NvColorTableShader.o \
	NvDefaultTFData.o \
	NvEventLog.o \
	NvLIC.o \
	NvLoadFile.o \
	NvParticleAdvectionShader.o \
	NvParticleRenderer.o \
	NvRegularVolumeShader.o \
	NvShader.o \
	NvStdVertexShader.o \
	NvVolumeShader.o \
	NvZincBlendeReconstructor.o \
	NvZincBlendeVolumeShader.o \
	PCASplit.o \
	PerfQuery.o \
	Plane.o \
	PlaneRenderer.o \
	PointSet.o \
	PointSetRenderer.o \
	PointShader.o \
	RenderContext.o \
	RenderVertexArray.o \
	Renderable.o \
	RpDX.o \
	ScreenSnapper.o \
	Socket.o \
	Sphere.o \
	Texture1D.o \
	Texture2D.o \
	Texture3D.o \
	Trace.o \
	TransferFunction.o \
	TransferFunctionGLUTWindow.o \
	Util.o \
	Vector3.o \
	Vector4.o \
	Volume.o \
	VolumeInterpolator.o \
	VolumeRenderer.o \
	ZincBlendeVolume.o \
	dxReader.o \
	dxReader2.o \
	dxReaderCommon.o \
	nanovis.o


all: nanovis

install: nanovis
	$(INSTALL_PROGRAM) nanovis $(bindir)/nanovis
	$(INSTALL_PROGRAM) @RP_DIR@/bin/voronoi $(bindir)/voronoi
	$(INSTALL_PROGRAM) -d $(libdir)/resources $(libdir)/shaders
	$(INSTALL_DATA) resources/* $(libdir)/resources
	$(INSTALL_DATA) shaders/* $(libdir)/shaders
	$(INSTALL_DATA) @RP_DIR@/lib/librappture2.so $(libdir)/librappture2.so
	$(INSTALL_DATA) @RP_DIR@/lib/libz.so $(libdir)/libz.so
	$(INSTALL_DATA) @RP_DIR@/lib/libb64.so $(libdir)/libb64.so

clean:
	make -C $(MAT_DIR) clean
	make -C $(R2_DIR)/src clean
	make -C $(IMG_DIR) clean
	rm -f nanovis client $(OBJS)

distclean: clean
	rm -f Makefile *~

$(MAT_LIB):
	make -C $(MAT_DIR) all

$(R2_LIB): 
	make -C $(R2_DIR)/src all

$(IMG_LIB): 
	make -C $(IMG_DIR) all

nanovis: $(MAT_LIB) $(R2_LIB) $(IMG_LIB) $(OBJS) 
	$(CC) $(CC_SWITCHES) -o $@ $^ $(LIBS)

client: Socket.o ClientSocket.o RenderClient.o Event.o
	$(CC) $(CC_SWITCHES) -o $@ $^ $(LIBS)

.cpp.o:
	$(CC) $(CC_SWITCHES) -o $@ -c $<

Nv.o: Nv.cpp NvShader.cpp
	$(CC) $(CC_SWITCHES) -c $^

dxReader2.o: $(srcdir)/dxReader2.cpp
	$(CC) -c $(CC_SWITCHES) $(DX_INC_SPEC) $?
RpDX.o: $(srcdir)/RpDX.cpp
	$(CC) -c $(CC_SWITCHES) $(DX_INC_SPEC) $?

ColorGradient.o: transfer-function/ColorGradient.cpp
	$(CC) $(CC_SWITCHES) -o $@ -c $<
ColorPaletteWindow.o: transfer-function/ColorPaletteWindow.cpp
	$(CC) $(CC_SWITCHES) -o $@ -c $<
ColorGradientGLUTWindow.o: transfer-function/ColorGradientGLUTWindow.cpp
	$(CC) $(CC_SWITCHES) -o $@ -c $<
ControlPoint.o: transfer-function/ControlPoint.cpp
	$(CC) $(CC_SWITCHES) -o $@ -c $<
TransferFunctionGLUTWindow.o: transfer-function/TransferFunctionGLUTWindow.cpp
	$(CC) $(CC_SWITCHES) -o $@ -c $<
MainWindow.o: transfer-function/MainWindow.cpp
	$(CC) $(CC_SWITCHES) -o $@ -c $<
Socket.o: socket/Socket.cpp socket/Socket.h
	$(CC) $(CC_SWITCHES) -o $@ -c $<
ClientSocket.o: socket/ClientSocket.cpp socket/ClientSocket.h
	$(CC) $(CC_SWITCHES) -o $@ -c $<
RenderClient.o: socket/RenderClient.cpp socket/RenderClient.h
	$(CC) $(CC_SWITCHES) -o $@ -c $<

NvStdVertexShader.o: NvStdVertexShader.cpp NvStdVertexShader.h
ContourLineFilter.o: ContourLineFilter.cpp ContourLineFilter.h
HeightMap.o: HeightMap.cpp HeightMap.h
Grid.o: Grid.cpp Grid.h
NvLoadFile.o: NvLoadFile.cpp NvLoadFile.h
NvParticleAdvectionShader.o: NvParticleAdvectionShader.cpp NvParticleAdvectionShader.h
NvParticleRenderer.o: NvParticleRenderer.cpp NvParticleRenderer.h
NvColorTableShader.o: NvColorTableShader.cpp NvColorTableShader.h
NvLIC.o: NvLIC.cpp NvLIC.h
NvColorTableRenderer.o: NvColorTableRenderer.cpp NvColorTableRenderer.h
NvEventLog.o: NvEventLog.cpp NvEventLog.h
NvShader.o: NvShader.cpp NvShader.h
NvVolumeShader.o: NvVolumeShader.cpp NvVolumeShader.h
NvDefaultTFData.o: NvDefaultTFData.cpp
NvRegularVolumeShader.o: NvRegularVolumeShader.cpp NvRegularVolumeShader.h
NvZincBlendeVolumeShader.o: NvZincBlendeVolumeShader.cpp NvZincBlendeVolumeShader.h
RenderVertexArray.o: RenderVertexArray.cpp RenderVertexArray.h
Color.o: Color.cpp Color.h
Event.o: Event.cpp Event.h
Sphere.o: Sphere.cpp Sphere.h
TransferFunction.o: TransferFunction.cpp
Texture1D.o: Texture1D.cpp Texture1D.h
Texture2D.o: Texture2D.cpp Texture2D.h $(AUXSRC)
Texture3D.o: Texture3D.cpp Texture3D.h $(AUXSRC)
Renderable.o: Renderable.cpp Renderable.h
NvCamera.o: NvCamera.cpp NvCamera.h
ScreenSnapper.o: ScreenSnapper.cpp ScreenSnapper.h define.h
Volume.o: Volume.cpp Volume.h $(AUXSRC)
ZincBlendeVolume.o: ZincBlendeVolume.cpp ZincBlendeVolume.h $(AUXSRC)
VolumeRenderer.o: VolumeRenderer.cpp VolumeRenderer.h
PlaneRenderer.o: PlaneRenderer.cpp PlaneRenderer.h
Mat4x4.o: Mat4x4.cpp Mat4x4.h
Vector4.o: Vector4.cpp Vector4.h
Vector3.o: Vector3.cpp Vector3.h
Plane.o: Plane.cpp Plane.h
ConvexPolygon.o: ConvexPolygon.cpp ConvexPolygon.h
PerfQuery.o: PerfQuery.cpp PerfQuery.h
PointShader.o: PointShader.cpp PointShader.h
PCASplit.o: PCASplit.cpp PCASplit.h
BucketSort.o: BucketSort.cpp BucketSort.h
PointSetRenderer.o: PointSetRenderer.cpp PointSetRenderer.h
PointSet.o: PointSet.cpp PointSet.h
RenderContext.o: RenderContext.cpp RenderContext.h
VolumeInterpolator.o: VolumeInterpolator.cpp VolumeInterpolator.h
GradientFilter.o: GradientFilter.cpp GradientFilter.h

Util.o: Util.cpp Util.h
Command.o: Command.cpp Command.h
Trace.o: Trace.cpp Trace.h

nanovis.o: nanovis.cpp nanovis.h $(AUXSRC)
