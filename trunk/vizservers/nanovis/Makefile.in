
SHELL = /bin/sh

.SUFFIX:
.SUFFIX: .c .o .cpp

.PHONY: all install clean distclean

prefix          = @prefix@
exec_prefix     = @exec_prefix@
bindir          = @bindir@
libdir          = @libdir@
includedir      = @includedir@
mandir          = @mandir@

INSTALL			= @INSTALL@
INSTALL_PROGRAM	= ${INSTALL} -m 755
INSTALL_DATA	= ${INSTALL} -m 644
INSTALL_SCRIPT	= ${INSTALL} -m 644

CC = @CC@

AUXSRC = config.h define.h global.h

R2INC = ./R2/include
MATINC = ./newmat11

LIB_NANOVIS = -L@RP_DIR@/lib -ltcl8.4 -lGL -lglut -lglui -lGLEW -lCg -lCgGL -pthread -lrappture2 -lb64 -lz
INCLUDES = -I@RP_DIR@/include -I@RP2_INCL_DIR@ -I/usr/include/GL -I$(R2INC) -I. -I$(MATINC)

CFLAGS = @CFLAGS@ $(INCLUDES)
# $(CFLAGS)

OBJS  = nanovis.o Socket.o RenderVertexArray.o Plane.o ConvexPolygon.o Vector4.o Vector3.o Mat4x4.o \
		Texture1D.o Texture3D.o Volume.o ZincBlendeVolume.o Texture2D.o ParticleSystem.o Sphere.o Color.o \
		PerfQuery.o TransferFunction.o ControlPoint.o ColorGradient.o ColorPaletteWindow.o\
		ColorGradientGLUTWindow.o TransferFunctionGLUTWindow.o MainWindow.o Event.o \
		Lic.o Renderable.o Camera.o ScreenSnapper.o VolumeRenderer.o PlaneRenderer.o Nv.o \
		NvZincBlendeVolumeShader.o NvShader.o NvVolumeShader.o NvRegularVolumeShader.o \
		NvLoadFile.o NvDefaultTFData.o NvColorTableShader.o NvColorTableRenderer.o NvParticleAdvectionShader.o \
		NvEventLog.o NvParticleRenderer.o NvLIC.o NvZincBlendeReconstructor.o NvStdVertexShader.o \
		ContourLineFilter.o HeightMap.o Grid.o \
		PointShader.o PCASplit.o BucketSort.o PointSetRenderer.o PointSet.o \
		bandmat.o cholesky.o evalue.o fft.o hholder.o jacobi.o myexcept.o newfft.o newmat1.o newmat2.o \
		newmat3.o newmat4.o newmat5.o newmat6.o newmat7.o newmat8.o newmat9.o newmatex.o newmatnl.o \
		newmatrm.o nm_misc.o solution.o sort.o svd.o submat.o \
		Image.o ImageLoader.o ImageLoaderImpl.o BMPImageLoaderImpl.o ImageLoaderFactory.o \
		R2string.o R2FilePath.o R2Fonts.o R2Object.o R2Geometry.o R2IndexBuffer.o R2VertexBuffer.o

all: nanovis

install: nanovis
	$(INSTALL_PROGRAM) nanovis $(bindir)/nanovis
	$(INSTALL_PROGRAM) @RP_DIR@/bin/voronoi $(bindir)/voronoi
	$(INSTALL_PROGRAM) -d $(libdir)/resources $(libdir)/shaders
	$(INSTALL_DATA) resources/* $(libdir)/resources
	$(INSTALL_DATA) shaders/* $(libdir)/shaders
	$(INSTALL_DATA) @RP_DIR@/lib/librappture2.so $(libdir)/librappture2.so
	$(INSTALL_DATA) @RP_DIR@/lib/libz.so $(libdir)/libz.so
	$(INSTALL_DATA) @RP_DIR@/lib/libb64.so $(libdir)/libb64.so

clean:
	rm -f *.o nanovis client

distclean: clean
	rm Makefile

nanovis: $(OBJS)
	$(CC) -g -o $@ $^ $(LIB_NANOVIS)

client: Socket.o ClientSocket.o RenderClient.o Event.o
	$(CC) -g -o $(LIB_NANOVIS) $@ $^

.cpp.o:
	$(CC) $(CFLAGS) -o $@ -c $<

Nv.o: Nv.cpp NvShader.cpp
	$(CC) $(CFLAGS) -c $^

ColorGradient.o: transfer-function/ColorGradient.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
ColorPaletteWindow.o: transfer-function/ColorPaletteWindow.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
ColorGradientGLUTWindow.o: transfer-function/ColorGradientGLUTWindow.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
ControlPoint.o: transfer-function/ControlPoint.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
TransferFunctionGLUTWindow.o: transfer-function/TransferFunctionGLUTWindow.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
MainWindow.o: transfer-function/MainWindow.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
Socket.o: socket/Socket.cpp socket/Socket.h
	$(CC) $(CFLAGS) -o $@ -c $<
ClientSocket.o: socket/ClientSocket.cpp socket/ClientSocket.h
	$(CC) $(CFLAGS) -o $@ -c $<
RenderClient.o: socket/RenderClient.cpp socket/RenderClient.h
	$(CC) $(CFLAGS) -o $@ -c $<
R2string.o: R2/src/R2string.cpp $(R2INC)/R2/R2string.h
	$(CC) $(CFLAGS) -o $@ -c $<
R2FilePath.o: R2/src/R2FilePath.cpp $(R2INC)/R2/R2FilePath.h
	$(CC) $(CFLAGS) -o $@ -c $<
R2Fonts.o: R2/src/R2Fonts.cpp $(R2INC)/R2/R2Fonts.h
	$(CC) $(CFLAGS) -o $@ -c $<
R2Object.o: R2/src/R2Object.cpp $(R2INC)/R2/R2Object.h
	$(CC) $(CFLAGS) -o $@ -c $<
R2Geometry.o: R2/src/R2Geometry.cpp $(R2INC)/R2/graphics/R2Geometry.h
	$(CC) $(CFLAGS) -o $@ -c $<
R2VertexBuffer.o: R2/src/R2VertexBuffer.cpp $(R2INC)/R2/graphics/R2VertexBuffer.h
	$(CC) $(CFLAGS) -o $@ -c $<
R2IndexBuffer.o: R2/src/R2IndexBuffer.cpp $(R2INC)/R2/graphics/R2IndexBuffer.h
	$(CC) $(CFLAGS) -o $@ -c $<

NvStdVertexShader.o: NvStdVertexShader.cpp NvStdVertexShader.h
ContourLineFilter.o: ContourLineFilter.cpp ContourLineFilter.h
HeightMap.o: HeightMap.cpp HeightMap.h
Grid.o: Grid.cpp Grid.h
NvLoadFile.o: NvLoadFile.cpp NvLoadFile.h
NvParticleAdvectionShader.o: NvParticleAdvectionShader.cpp NvParticleAdvectionShader.h
NvParticleRenderer.o: NvParticleRenderer.cpp NvParticleRenderer.h
NvColorTableShader.o: NvColorTableShader.cpp NvColorTableShader.h
NvLIC.o: NvLIC.cpp NvLIC.h
NvColorTableRenderer.o: NvColorTableRenderer.cpp NvColorTableRenderer.h
NvEventLog.o: NvEventLog.cpp NvEventLog.h
NvShader.o: NvShader.cpp NvShader.h
NvVolumeShader.o: NvVolumeShader.cpp NvVolumeShader.h
NvDefaultTFData.o: NvDefaultTFData.cpp
NvRegularVolumeShader.o: NvRegularVolumeShader.cpp NvRegularVolumeShader.h
NvZincBlendeVolumeShader.o: NvZincBlendeVolumeShader.cpp NvZincBlendeVolumeShader.h
RenderVertexArray.o: RenderVertexArray.cpp RenderVertexArray.h
Color.o: Color.cpp Color.h
Event.o: Event.cpp Event.h
Sphere.o: Sphere.cpp Sphere.h
TransferFunction.o: TransferFunction.cpp
Texture1D.o: Texture1D.cpp Texture1D.h
Texture2D.o: Texture2D.cpp Texture2D.h $(AUXSRC)
Texture3D.o: Texture3D.cpp Texture3D.h $(AUXSRC)
ParticleSystem.o: ParticleSystem.cpp $(AUXSRC)
Renderable.o: Renderable.cpp Renderable.h
Camera.o: Camera.cpp Camera.h
ScreenSnapper.o: ScreenSnapper.cpp ScreenSnapper.h define.h
Lic.o: Lic.cpp Lic.h $(AUXSRC)
Volume.o: Volume.cpp Volume.h $(AUXSRC)
ZincBlendeVolume.o: ZincBlendeVolume.cpp ZincBlendeVolume.h $(AUXSRC)
VolumeRenderer.o: VolumeRenderer.cpp VolumeRenderer.h
PlaneRenderer.o: PlaneRenderer.cpp PlaneRenderer.h
Mat4x4.o: Mat4x4.cpp Mat4x4.h
Vector4.o: Vector4.cpp Vector4.h
Vector3.o: Vector3.cpp Vector3.h
Plane.o: Plane.cpp Plane.h
ConvexPolygon.o: ConvexPolygon.cpp ConvexPolygon.h
PerfQuery.o: PerfQuery.cpp PerfQuery.h
PointShader.o: PointShader.cpp PointShader.h
PCASplit.o: PCASplit.cpp PCASplit.h
BucketSort.o: BucketSort.cpp BucketSort.h
PointSetRenderer.o: PointSetRenderer.cpp PointSetRenderer.h
PointSet.o: PointSet.cpp PointSet.h
bandmat.o: newmat11/bandmat.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
cholesky.o: newmat11/cholesky.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
evalue.o: newmat11/evalue.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
fft.o: newmat11/fft.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
hholder.o: newmat11/hholder.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
jacobi.o: newmat11/jacobi.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
myexcept.o: newmat11/myexcept.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
newfft.o: newmat11/newfft.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
newmat1.o: newmat11/newmat1.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
newmat2.o: newmat11/newmat2.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
newmat3.o: newmat11/newmat3.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
newmat4.o: newmat11/newmat4.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
newmat5.o: newmat11/newmat5.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
newmat6.o: newmat11/newmat6.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
newmat7.o: newmat11/newmat7.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
newmat8.o: newmat11/newmat8.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
newmat9.o: newmat11/newmat9.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
newmatex.o: newmat11/newmatex.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
newmatnl.o: newmat11/newmatnl.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
newmatrm.o: newmat11/newmatrm.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
nm_misc.o: newmat11/nm_misc.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
solution.o: newmat11/solution.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
sort.o: newmat11/sort.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
svd.o: newmat11/svd.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
submat.o: newmat11/submat.cpp
	$(CC) $(CFLAGS) -o $@ -c $<

Image.o: imgLoaders/Image.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
ImageLoader.o: imgLoaders/ImageLoader.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
ImageLoaderImpl.o: imgLoaders/ImageLoaderImpl.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
BMPImageLoaderImpl.o: imgLoaders/BMPImageLoaderImpl.cpp
	$(CC) $(CFLAGS) -o $@ -c $<
ImageLoaderFactory.o: imgLoaders/ImageLoaderFactory.cpp
	$(CC) $(CFLAGS) -o $@ -c $<

nanovis.o: nanovis.cpp nanovis.h $(AUXSRC)
